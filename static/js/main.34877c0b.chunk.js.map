{"version":3,"sources":["static/logo.png","redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","redux/actions/todos.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/Todos/TodoInput.tsx","components/Todos/TodoItemInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Statistics/Polygon.tsx","components/Statistics/TodoHistory/TodoHistoyTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","combineReducers","todos","state","arguments","length","undefined","action","type","payload","concat","Object","toConsumableArray","map","t","id","assign","editing","tomatoes","store","createStore","rootReducer","updateTodos","publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","t-app-id","t-app-secret","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","timeId","initialState","description","TodoInput","postTodo","_callee","regenerator_default","a","wrap","_context","prev","next","post","_this","sent","props","addTodo","data","resource","t0","Error","setState","stop","onKeyUp","e","key","_this2","this","suffix","react","icon","onClick","className","input","placeholder","onChange","target","value","React","mapDispatchToProps","connect","ownProps","objectSpread","TodoItemInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","myRef","createRef","editText","onBlur","_ref","asyncToGenerator","mark","params","completed","completed_at","Date","put","_x","apply","current","focus","react_default","createElement","ref","Component","TodoItem","onDoubleClick","editTodos","Editing","components_Todos_TodoItemInput","theme","deleted","Displaying","toItemClass","classNames","es_checkbox","checked","Panel","collapse","Todos","Todos_TodoInput","noCompletedTodos","components_Todos_TodoItem","defaultActiveKey","header","recentCompletedTodos","filter","noDeletedTodos","CompletedTodos","index","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","min","Math","floor","sec","confirm","modal","TomatoAction","forceUpdate","abortTomato","updateTomato","aborted","_ref2","_callee2","_context2","unfinishedTomato","showConfirm","onOk","okText","cancelText","ended_at","html","es_button","startTomato","started_at","parse","timeNow","getTime","components_Tomatoes_CountDown","TomatoItem","format","TomatoList","list","dates","d","finishedTomatoes","TomatoList_TomatoItem","keys","sort","b","splice","Tomatoes","addTomato","components_Tomatoes_TomatoAction","components_Tomatoes_TomatoList","_","groupBy","tomato","Polygon","today","dateArr","i","peviousDate","numArr","finishedDayIndex","hasOwnProperty","lastWeekDate","tooltip","text","textStyle","color","fontWeight","lineHeight","xAxis","show","yAxis","max","grid","bottom","left","right","series","name","barMinHeight","finishedNum","itemStyle","emphasis","lib_default","option","getOption","notMerge","lazyUpdate","TodoHistoyTodoItem","formatText","itemType","updated_at","created_at","TabPane","tabs","TodoHistory","date","dateStr","replace","getDay","todoList","finishedDates","getWeekday","dailyFinishedTodos","todo","TodoHistory_TodoHistoyTodoItem","deletedList","deletedTodos","tab","finishedTodos","Statistics","components_Statistics_Polygon","dailyTomatoes","dailyTodos","Statistics_TodoHistory_TodoHistory","menu","Item","user","account","Home","getMe","get","getTodos","resources","initTodos","getTomatoes","_callee3","_context3","initTomatoes","src","logo","alt","dropdown","overlay","marginLeft","components_Tomatoes_Tomatoes","components_Todos_Todos","components_Statistics_Statistics","password","Login","newState","submit","_this$state","alert","errors","_this$state2","prefix","Password","react_router_dom","to","passwordConfirmation","SignUp","password_confirmation","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34877c0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.01fc1791.png\";","import {combineReducers} from 'redux'\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\n\r\nexport default combineReducers({todos, tomatoes})\r\n","import { ADD_TODO, INIT_TODOS, UPDATE_TODOS, EDIT_TODOS } from '../actionTypes'\r\n\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload,...state ]\r\n\r\n    case INIT_TODOS:\r\n      return action.payload\r\n\r\n    case UPDATE_TODOS:\r\n      return state.map(t => {\r\n        if (action.payload.id === t.id) {\r\n          return action.payload\r\n        } else {\r\n          return t\r\n        }\r\n      })\r\n    case EDIT_TODOS:\r\n      return state.map((t) => {\r\n        if (action.payload === t.id) {\r\n          return Object.assign({}, t, { editing: true })\r\n        } else {\r\n          return Object.assign({}, t, { editing: false })\r\n        }\r\n      })\r\n\r\n    default: return state\r\n  }\r\n\r\n}\r\n","export const  ADD_TODO = 'ADD_TODO'\r\nexport const  INIT_TODOS = 'INIT_TODOS'\r\nexport const  UPDATE_TODOS = 'UPDATE_TODOS'\r\nexport const  EDIT_TODOS = 'EDIT_TODOS'\r\n\r\nexport const  ADD_TOMATO = 'ADD_TOMATO'\r\nexport const  INIT_TOMATOES = 'INIT_TOMATOES'\r\nexport const  UPDATE_TOMATO = 'UPDATE_TOMATO'","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from '../actionTypes'\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state]\r\n\r\n    case INIT_TOMATOES:\r\n      return [...action.payload]\r\n      \r\n    case UPDATE_TOMATO:\r\n      return state.map(t => {\r\n        if (action.payload.id === t.id) {\r\n          return action.payload\r\n        } else {\r\n          return t\r\n        }\r\n      })\r\n    default: return state\r\n  }\r\n\r\n}\r\n","import { createStore } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","import {ADD_TODO, INIT_TODOS, UPDATE_TODOS, EDIT_TODOS} from 'redux/actionTypes'\r\n\r\nexport const addTodo = (payload:any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const initTodos = (payload:any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateTodos = (payload:any) => {\r\n  return {\r\n    type: UPDATE_TODOS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const editTodos = (payload:number) => {\r\n  return {\r\n    type: EDIT_TODOS,\r\n    payload\r\n  }\r\n}","import {createBrowserHistory} from 'history'\r\n\r\nconst ENV = process.env.NODE_ENV;\r\n\r\nlet publicUrl: string = '';\r\n\r\nif(ENV === 'development'){\r\n  publicUrl ='/';\r\n}else if(ENV === 'production'){\r\n  publicUrl = '/tomato-clock'\r\n}\r\n\r\nconst history = createBrowserHistory({\r\n  basename: publicUrl\r\n});\r\n\r\nexport default history;","import axios from 'axios'\r\nimport history from './history'\r\n\r\nconst appID = 'DyAShocuh1yeoTr5J7STq9Nf'\r\nconst appSecret = 'BRLL72sYYcJ4L75BMWQ2zGX8'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n\r\n  const xToken = localStorage.getItem('x-token')\r\n  if (xToken) {\r\n    config.headers['Authorization'] = `Bearer ${xToken}`\r\n  }\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  console.error(error)\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token'])\r\n  }\r\n  // Do something with response data\r\n  return response;\r\n}, function (error) {\r\n  if(error.response.status === 401){\r\n    console.log('重定向');\r\n    history.push('/login')\r\n  }\r\n  // Do something with response error\r\n  return Promise.reject(error); //有什么用？\r\n});\r\n\r\nexport default instance","import React, { Component } from 'react';\r\nimport './CountDown.scss'\r\n\r\ninterface Props {\r\n  timer: number;\r\n  duration: number;\r\n  onFinish: () => void\r\n}\r\ninterface State {\r\n  countDown: number\r\n  \r\n}\r\nlet timeId:NodeJS.Timeout\r\n\r\nclass CountDown extends Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      countDown : this.props.timer\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    timeId = setInterval(()=>{\r\n      const time = this.state.countDown\r\n      this.setState({countDown :time - 1000})\r\n      document.title = `${this.countDown} 番茄钟`\r\n      if(time < 1000){\r\n        document.title = `番茄钟`\r\n        this.props.onFinish() //告诉父组件 完成倒计时\r\n        clearInterval(timeId)\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  get countDown(){\r\n    const min = Math.floor(this.state.countDown / 1000 / 60)\r\n    const sec = Math.floor(this.state.countDown/ 1000 % 60) \r\n    return (min > 9 ? min : '0' + min) + ' : ' + (sec > 9 ? sec : '0' + sec)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(timeId)\r\n  }\r\n\r\n  render() {\r\n    const percent = 1 - this.state.countDown/this.props.duration\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span>{this.countDown}</span>\r\n        <div className=\"process\" style={{width: `${percent*100}%`}}/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;","import * as React from 'react';\r\nimport {Input, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {addTodo} from 'redux/actions/todos'\r\nimport axios from '../../config/axios'\r\n\r\nconst initialState = {\r\n  description: ''\r\n}\r\ninterface Props {\r\n  addTodo: (payload:any) => any;\r\n}\r\ntype State = Readonly<typeof initialState>\r\nclass TodoInput extends React.Component <Props,State>{\r\n  readonly state : State = initialState\r\n\r\n  // addTodo = ()=>{\r\n  //   this.props.addTodo({description: this.state.description})\r\n  //   this.setState({description: \"\"})\r\n  // }\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description: this.state.description})\r\n      this.props.addTodo(response.data.resource)\r\n      \r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n    this.setState({description: \"\"})\r\n  } \r\n  onKeyUp = (e)=>{\r\n    if(e.key === 'Enter' && this.state.description !== ''){\r\n      this.postTodo()\r\n    }\r\n  }\r\n  render() {\r\n    \r\n    const {description} = this.state\r\n    const suffix = description ? <Icon type=\"enter\" onClick={this.postTodo} /> : <span/>//预设一个<span/>防止失去焦点\r\n    return (\r\n      <div className=\"TodoInput\" id=\"TodoInput\">\r\n        <Input \r\n        placeholder=\"添加新任务\" \r\n        suffix={suffix}\r\n        onChange={(e)=>this.setState({description: e.target.value})} \r\n        onKeyUp={this.onKeyUp}\r\n        value={description}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps ={\r\n  addTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { updateTodos } from 'redux/actions/todos';\r\nimport axios from '../../config/axios'\r\nimport './TodoItemInput.scss'\r\n\r\ninterface Props {\r\n  id: number\r\n  editText: string\r\n  updateTodos: (payload: any) => any\r\n}\r\n\r\ninterface State {\r\n  editText: string,\r\n}\r\n\r\nclass TodoItemInput extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.editText,\r\n    }\r\n  }\r\n\r\n  private myRef = React.createRef<HTMLInputElement>();\r\n\r\n  componentDidMount() {\r\n    if (this.myRef.current) {\r\n      this.myRef.current.focus()\r\n    }\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.key === 'Enter' && this.state.editText !== '') {\r\n      this.updateTodos({ description: this.state.editText })\r\n    }\r\n  }\r\n\r\n  onBlur = () => {\r\n    this.updateTodos({ description: this.state.editText })\r\n  }\r\n\r\n  updateTodos = async (params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date()\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params)\r\n      this.props.updateTodos(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TodoItemInput\" id=\"TodoItemInput\">\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myRef}\r\n          value={this.state.editText}\r\n          onChange={e => this.setState({ editText: e.target.value })}\r\n          onKeyUp={this.onKeyUp}\r\n          onBlur={this.onBlur}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodos\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemInput);\r\n","import React, { Component } from 'react';\r\nimport { Checkbox, Icon } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport '../Todos/TodoItem.scss'\r\nimport classNames from 'classnames'\r\nimport { editTodos, updateTodos } from 'redux/actions/todos'\r\nimport axios from '../../config/axios'\r\nimport TodoItemInput from './TodoItemInput';\r\n\r\ninterface Props {\r\n  id: number,\r\n  description: string,\r\n  completed: boolean,\r\n  editing: boolean,\r\n  updateTodos: (payload: any) => any,\r\n  editTodos: (payload: number) => any\r\n}\r\ninterface State {\r\n  editText: string,\r\n  id: number\r\n}\r\n\r\nclass TodoItem extends Component<Props, State>{\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description,\r\n      id: this.props.id\r\n    }\r\n  }\r\n\r\n  updateTodos = async (params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date()\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params)\r\n      this.props.updateTodos(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  onDoubleClick = () => {\r\n    this.props.editTodos(this.props.id)\r\n  }\r\n  render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <TodoItemInput editText={this.props.description} id={this.state.id}/>\r\n        <Icon className=\"icon\" type=\"enter\" onClick={() =>\r\n          this.updateTodos({ description: this.state.editText })\r\n        } />\r\n        <Icon className=\"icon\" type=\"delete\" theme=\"filled\" onClick={\r\n          e => this.updateTodos({ deleted: true })\r\n        } />\r\n      </div>\r\n    )\r\n\r\n    const Displaying = (\r\n      <div className=\"displaying\">\r\n        <div className=\"text\"\r\n          onDoubleClick={this.onDoubleClick}>\r\n          {this.props.description}\r\n        </div>\r\n        <Icon className=\"icon\" type=\"delete\" theme=\"filled\" onClick={\r\n          e => this.updateTodos({ deleted: true })\r\n        } />\r\n      </div>\r\n    )\r\n\r\n    const toItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    })\r\n\r\n\r\n    return (\r\n      \r\n      <div className={toItemClass} id=\"TodoItem\">\r\n        <Checkbox\r\n          onChange={e => this.updateTodos(\r\n            { completed: e.target.checked })}\r\n          checked={this.props.completed} />\r\n        {\r\n          this.props.editing ? Editing : Displaying\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  editTodos,\r\n  updateTodos\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport './Todos.scss'\r\nimport TodoInput from './TodoInput';\r\nimport TodoItem from './TodoItem';\r\nimport { Collapse } from 'antd';\r\n\r\nconst Panel = Collapse.Panel;\r\n\r\nclass Todos extends React.Component<any>{\r\n\r\n  get noDeletedTodos() {\r\n    return this.props.todos.filter(t => !t.deleted)\r\n  }\r\n  get noCompletedTodos() {\r\n    return this.noDeletedTodos.filter(t => !t.completed)\r\n  }\r\n  get CompletedTodos() {\r\n    return this.noDeletedTodos.filter(t => t.completed)\r\n  }\r\n  get recentCompletedTodos() {\r\n    return this.CompletedTodos.filter((t, index) => index < 5\r\n    )\r\n  }\r\n\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodoInput />\r\n        <div className=\"todoLists\" >\r\n          {\r\n            this.noCompletedTodos.map((t) =>\r\n              <TodoItem key={t.id} {...t}//把t的所有属性传给TodoItem\r\n              />)\r\n          }\r\n          <Collapse defaultActiveKey={[]} className=\"showCompleted\">\r\n            <Panel header=\"最近完成的任务\" key=\"1\">\r\n              {\r\n                this.recentCompletedTodos.map((t) =>\r\n                  <TodoItem key={t.id} {...t}\r\n                  />)\r\n              }\r\n            </Panel>\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ //state是store里的reducer里的state\r\n  todos: state.todos,\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(Todos);","import React, { Component } from 'react';\r\nimport { Button, Input, Icon, Modal } from 'antd'\r\nimport axios from 'config/axios'\r\nimport CountDown from './CountDown'\r\nimport './TomatoAction.scss'\r\n\r\ninterface Props {\r\n  startTomato: () => void;\r\n  unfinishedTomato: any\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\ninterface State {\r\n  description: string\r\n}\r\n\r\nconst confirm = Modal.confirm;\r\n\r\nclass TomatoAction extends Component<Props, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  onKeyUp(e) {\r\n    if (e.key === 'Enter' && this.state.description !== '') {\r\n      this.updateTomato({\r\n        description: this.state.description, \r\n        ended_at: new Date()\r\n      })\r\n        this.setState({ description: '' })\r\n    }\r\n  }\r\n\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  abortTomato = async () => {\r\n    this.updateTomato({aborted: true})\r\n    document.title = '番茄钟'\r\n  }\r\n\r\n  updateTomato = async (params:any) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `tomatoes/${this.props.unfinishedTomato.id}`, params)\r\n      this.props.updateTomato(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  showConfirm = () =>{\r\n    confirm({\r\n      title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n      onOk : ()=>{\r\n        this.abortTomato()\r\n      },\r\n      okText: '确定',\r\n      cancelText: '取消'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let html\r\n\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\"\r\n        onClick={this.props.startTomato}\r\n      >开始番茄</Button>\r\n    } else {\r\n      const started_at = Date.parse(this.props.unfinishedTomato.started_at)\r\n      const duration = this.props.unfinishedTomato.duration\r\n      const timeNow = new Date().getTime()\r\n      if (timeNow - started_at > duration) {\r\n        html = <div className=\"countDownWrapper\">\r\n          <Input\r\n            value={this.state.description}\r\n            placeholder=\"请输入你刚刚完成的任务\"\r\n            onChange={e => this.setState({ description: e.target.value })}\r\n            onKeyUp={e => this.onKeyUp(e)}\r\n          />\r\n          <Icon className=\"abort\" type=\"close-circle\" onClick={this.showConfirm}/>\r\n        </div>\r\n\r\n      } else if (timeNow - started_at < duration) {\r\n        const timer = duration - (timeNow - started_at)\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n            <Icon className=\"abort\" type=\"close-circle\" onClick={this.showConfirm}/>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoAction;","import React, { Component } from 'react';\r\nimport { format } from \"date-fns\";\r\nimport \"./TomatoList.scss\";\r\n\r\ninterface Props {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props) {\r\n  let ended_at = new Date(new Date(props.started_at).getTime() + 25 * 60 * 1000)\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span className=\"timeRange\">{format(props.started_at, 'HH : mm')} - {format(ended_at, 'HH : mm')}</span>\r\n      <span className=\"description\">{props.description}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass TomatoList extends Component<Props> {\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes)\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3)\r\n  }\r\n\r\n  render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d]\r\n      return (\r\n        <div key={d} className=\"dailyTomatoes\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\">{format(d, 'M月DD日')}</span>\r\n            <span className=\"finishedCount\">完成了{tomatoes.length}个番茄</span>\r\n          </div>\r\n          {\r\n            tomatoes.map(t => <TomatoItem key={t.id} {...t} />)\r\n          }\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Tomatoes.scss'\r\nimport TomatoAction from './TomatoAction'\r\nimport TomatoList from './TomatoList'\r\nimport { addTomato, updateTomato } from 'redux/actions/tomatoes';\r\nimport axios from '../../config/axios'\r\nimport _ from 'lodash'\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  tomatoes: any[]\r\n  addTomato: (payload: any) => any\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\nclass Tomatoes extends Component<Props> {\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0]\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted)\r\n    const obj = _.groupBy(finishedTomatoes, (tomato) => { //lodasha\r\n      return format(tomato.started_at, 'YYYY-MM-D')\r\n    })\r\n    return obj  //返回一个以日期为keys，当天完成的tomatoes（数组）为values的对象\r\n  }\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', { duration: 25 * 60 * 1000 })\r\n      this.props.addTomato(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction\r\n          startTomato={this.startTomato}\r\n          unfinishedTomato={this.unfinishedTomato}\r\n          updateTomato={this.props.updateTomato}\r\n        />\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(Tomatoes);","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from 'redux/actionTypes'\r\n\r\nexport const addTomato = (payload:any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const initTomatoes = (payload:any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateTomato = (payload:any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Polygon.scss'\r\nimport { format } from 'date-fns';\r\n\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\ninterface Props {\r\n  data: any,\r\n  title: String,\r\n}\r\n\r\nclass Polygon extends Component<Props> {\r\n\r\n  lastWeekDate() {\r\n    let today = new Date().getTime()\r\n    let dateArr: any[] = []\r\n    for (let i = 0; i < 7; i++) {\r\n      let peviousDate = today - 24 * 60 * 60 * 1000 * (6 - i)\r\n      dateArr[i] = format(new Date(peviousDate), 'YYYY-MM-D')\r\n    }\r\n    return dateArr\r\n  }\r\n  finishedNum() {\r\n    let numArr: Number[] = []\r\n    for (let i = 0; i < 7; i++) {\r\n      let finishedDayIndex = this.props.data.hasOwnProperty(this.lastWeekDate()[i])\r\n      if (finishedDayIndex) {\r\n        numArr[i] = this.props.data[this.lastWeekDate()[i]].length\r\n      } else {\r\n        numArr[i] = 0\r\n\r\n      }\r\n    }\r\n    return numArr\r\n  }\r\n  getOption() {\r\n    return {\r\n      tooltip: {\r\n\r\n      },\r\n      title: {\r\n        text: this.props.title,\r\n        textStyle: {\r\n          color: \"#666\",\r\n          fontWeight: \"normal\",\r\n          lineHeight: 40,\r\n        }\r\n      },\r\n      xAxis: {\r\n        show: true,\r\n        data: this.lastWeekDate()\r\n      },\r\n      yAxis: {\r\n        show: true,\r\n        max: 10,\r\n      },\r\n      grid: {\r\n        bottom: 30,\r\n        left: 30,\r\n        right: 10,\r\n      },\r\n      series: [{\r\n        name: '完成数量',\r\n        type: 'bar',\r\n        barMinHeight: 1,\r\n        data: this.finishedNum(),\r\n        itemStyle: {\r\n          color: 'rgba(165, 42 ,42, 0.4)'\r\n        },\r\n        emphasis: {\r\n          itemStyle: {\r\n            color: '#ed7579'\r\n          }\r\n        }\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Polygon\" id=\"Polygon\">\r\n        <ReactEcharts\r\n          className=\"echart\"\r\n          option={this.getOption()}\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          theme={\"theme_name\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Polygon;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport './TodoHistoryTodoItem.scss'\r\nimport { updateTodos } from 'redux/actions/todos'\r\nimport axios from 'config/axios'\r\n\r\ninterface Props {\r\n  id: number\r\n  updated_at: any\r\n  created_at: any\r\n  description: string\r\n  itemType: string\r\n  completed: boolean\r\n  deleted: boolean\r\n  updateTodos: (payload: any) => any\r\n}\r\n\r\nclass TodoHistoyTodoItem extends Component<Props> {\r\n\r\n  updateTodos = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params)\r\n      this.props.updateTodos(response.data.resource)\r\n      console.log(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let formatText, action, time\r\n    if (this.props.itemType === 'finished') {\r\n      time = this.props.updated_at\r\n      formatText = \"HH:mm\"\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodos({ completed: false })}>恢复</span>\r\n          <span onClick={() => this.updateTodos({ deleted: true })}>删除</span>\r\n        </div>\r\n      )\r\n    } else if (this.props.itemType === 'deleted') {\r\n      time = this.props.created_at\r\n      formatText = \"YYYY-MM-D\"\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodos({ deleted: false })}>恢复</span>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"TodoHistoyTodoItem\" id=\"TodoHistoyTodoItem\">\r\n        <span className=\"timeRange\">{format(time, formatText)}</span>\r\n        <span className=\"description\">{this.props.description}</span>\r\n        <div>\r\n          {action}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodos\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, mapDispatchToProps\r\n)(TodoHistoyTodoItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport { Tabs } from 'antd'\r\nimport _ from 'lodash'\r\nimport TodoHistoyTodoItem from './TodoHistoyTodoItem'\r\nimport './TodoHistory.scss'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\ninterface Props {\r\n  todos: any[]\r\n}\r\n\r\nclass TodoHistory extends Component<Props> {\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted)\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => format(todo.updated_at, 'YYYY-MM-D'))\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted)\r\n  }\r\n  getWeekday(date){\r\n    const weekDay = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"];\r\n    const dateStr = date;\r\n    const myDate = new Date(Date.parse(dateStr.replace(/-/g, \"/\")));\r\n    return weekDay[myDate.getDay()]\r\n  }\r\n\r\n  render() {\r\n    const todoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyHistory\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\">{date}</span>\r\n            <span className=\"weeklyDate\">{this.getWeekday(date)}</span>\r\n            <span className=\"count\">完成了{this.dailyFinishedTodos[date].length}个任务</span>\r\n          </div>\r\n          <div className=\"items\">\r\n            {\r\n              this.dailyFinishedTodos[date].map(todo =>\r\n                <TodoHistoyTodoItem key={todo.id} {...todo} itemType=\"finished\" />)\r\n            }\r\n          </div>\r\n        </div>)\r\n    })\r\n    const deletedList = this.deletedTodos.map(todo => {\r\n      return <TodoHistoyTodoItem key={todo.id} {...todo} itemType=\"deleted\" />\r\n    })\r\n    return (\r\n      <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"已完成的任务\" key=\"1\">\r\n            {todoList}\r\n          </TabPane>\r\n          <TabPane tab=\"已删除的任务\" key=\"2\">\r\n            {deletedList}\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(TodoHistory);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Statistics.scss'\r\nimport Polygon from './Polygon'\r\nimport TodoHistory from './TodoHistory/TodoHistory'\r\nimport _ from 'lodash'\r\nimport { format } from 'date-fns';\r\n\r\ninterface Props {\r\n  todos: any[],\r\n  tomatoes: any[]\r\n}\r\n\r\nclass Statistics extends Component<Props> {\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted)\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return format(todo.updated_at, 'YYYY-MM-D')\r\n    })\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter(t => !t.aborted && t.ended_at)\r\n  }\r\n\r\n  get dailyTomatoes() {\r\n    return _.groupBy(this.finishedTomatoes, (tomato) => {\r\n      let ended_at = new Date(new Date(tomato.started_at).getTime() + 25 * 60 * 1000)\r\n      return format(ended_at, 'YYYY-MM-D')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul>\r\n          <li>\r\n            <Polygon data={this.dailyTomatoes} title={\"近期番茄完成概况\"}/>\r\n\r\n          </li>\r\n          <li>\r\n            <Polygon data={this.dailyTodos} title={\"近期任务完成概况\"}/>\r\n          </li>\r\n        </ul>\r\n        <TodoHistory />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n})\r\n\r\nexport default connect(mapStateToProps)(Statistics);","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown, Icon, Menu } from 'antd'\r\nimport { initTodos } from 'redux/actions/todos'\r\nimport { initTomatoes } from 'redux/actions/tomatoes';\r\nimport Todos from '../Todos/Todos'\r\nimport Tomatoes from '../Tomatoes/Tomatoes'\r\nimport Statistics from '../Statistics/Statistics'\r\nimport axios from '../../config/axios'\r\nimport history from '../../config/history'\r\nimport './Home.scss'\r\nimport logo from '../../static/logo.png'\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '')\r\n  history.push('/login')\r\n}\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\" onClick={logout}><Icon type=\"user\" />登出</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nconst initialState = {\r\n  user: { 'account': \"\" }\r\n}\r\n\r\ntype State = Readonly<typeof initialState>\r\n\r\nclass Home extends React.Component<any, State>{\r\n  readonly state: State = initialState\r\n\r\n  async componentWillMount() {\r\n    await this.getMe()\r\n    await this.getTodos()\r\n    await this.getTomatoes()\r\n  }\r\n\r\n  getMe = async () => {\r\n    const response = await axios.get('me')\r\n    this.setState({ user: response.data })\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos')\r\n      const todos = response.data.resources.map(t => Object.assign({}, t, { editing: false }))\r\n      this.props.initTodos(todos)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes')\r\n      this.props.initTomatoes(response.data.resources)\r\n\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\" id=\"Home\">\r\n        <header>\r\n          <div className=\"logo\">\r\n            <img src={logo} alt=\"\"/>\r\n            <span>番茄土豆</span>\r\n          </div>\r\n          <Dropdown overlay={menu} className=\"Dropdown\">\r\n            <span>{this.state.user.account}<Icon type=\"down\" style={{ marginLeft: 8 }} /></span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomatoes />\r\n          <Todos />\r\n        </main>\r\n        <Statistics />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, Icon, Button } from 'antd';\r\nimport axios from '../../config/axios'\r\nimport './Login.scss'\r\n\r\ninterface axios { }\r\nconst initialState = {\r\n  account: '',\r\n  password: ''\r\n}\r\ntype State = Readonly<typeof initialState>;\r\n\r\nclass Login extends React.Component<any, State>{\r\n  readonly state: State = initialState;\r\n\r\n  onChange = (key: keyof State, value: string) => {\r\n    const newState = {}\r\n    newState[key] = value\r\n    this.setState(newState)\r\n  }\r\n  \r\n  submit = async () => {\r\n    const { account, password } = this.state\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      })\r\n      console.log('成功！');\r\n      this.props.history.push('/')\r\n    } catch (e) {\r\n      alert(e.response.data.errors)\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { account, password } = this.state\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>番茄土豆登录</h1>\r\n        <br />\r\n        <Input\r\n          placeholder=\"请输入您的用户名\"\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          value={account}\r\n          onChange={(e) => { this.onChange('account', e.target.value) }}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入您的密码\" onChange={(e) => { this.onChange('password', e.target.value) }} />\r\n        <Button type=\"primary\" className=\"loginButton\" onClick={this.submit}>登录</Button>\r\n        <p>如果你没有账号，请立即<Link to=\"/signUp\">注册</Link></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, Icon, Button } from 'antd';\r\nimport axios from '../../config/axios'\r\nimport './SignUp.scss'\r\n\r\ninterface axios { }\r\nconst initialState = {\r\n  account: '',\r\n  password: '',\r\n  passwordConfirmation: ''\r\n}\r\ntype State = Readonly<typeof initialState>\r\nclass SignUp extends React.Component<any, State>{\r\n\r\n  readonly state: State = initialState;\r\n\r\n  onChange = (key: keyof State, value: string) => {\r\n    const newState = {}\r\n    newState[key] = value\r\n    this.setState(newState)\r\n  }\r\n\r\n  submit = async () => {\r\n    const { account, password, passwordConfirmation } = this.state\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account,\r\n        password,\r\n        password_confirmation: passwordConfirmation\r\n      })\r\n      console.log('成功！');\r\n      this.props.history.push('/')// 没用constructor(props)，为什么能调用到history\r\n    } catch (e) {\r\n      console.log(e.response.data.errors)\r\n      if(e.response.data.errors.account){\r\n        alert('该账号已存在')\r\n      }else if(e.response.data.errors.password_confirmation){\r\n        alert('两次密码不一致')\r\n      }\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { account, password, passwordConfirmation } = this.state\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h1>番茄土豆注册</h1>\r\n        <br />\r\n        <Input\r\n          placeholder=\"请输入您的用户名\"\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          value={account}\r\n          onChange={(e) => this.onChange('account', e.target.value)}\r\n        />\r\n        <Input.Password\r\n          value={password}\r\n          placeholder=\"请输入您的密码\"\r\n          onChange={(e) => this.onChange('password', e.target.value)} />\r\n        <Input.Password\r\n          value={passwordConfirmation}\r\n          placeholder=\"请再次输入您的密码\"\r\n          onChange={(e) => this.onChange('passwordConfirmation', e.target.value)} />\r\n        <Button type=\"primary\" className=\"signUpButton\" onClick={this.submit}>注册</Button>\r\n        <p>如果你有账号，请立即<Link to=\"/login\">登录</Link></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home/Home'\r\nimport Login from './components/Login/Login'\r\nimport SignUp from './components/SignUp/SignUp'\r\nimport {Router, Route} from \"react-router-dom\";\r\nimport history from './config/history'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n      <div className=\"App\">\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signUp\" component={SignUp} />\r\n      </div>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}